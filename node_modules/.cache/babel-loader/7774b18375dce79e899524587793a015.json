{"ast":null,"code":"var _jsxFileName = \"/Users/kristinalobanets/Documents/GitHub/goit-react-hw-03-phonebook/src/components/phonebook/Phonebook.js\";\nimport React, { Component } from \"react\";\nimport ContactForm from \"../ContactForm/ContactForm\";\nimport ContactList from \"../ContactList/ContactList\";\nimport Filter from \"../filter/filter\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport styles from \"./phonebook.module.css\";\nimport PropTypes from \"prop-types\";\n\nclass Phonebook extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      contacts: [],\n      filter: \"\"\n    };\n\n    this.addContact = contact => {\n      if (this.state.contacts.find(item => item.name === contact.name)) {\n        alert(\"The name is already exsist\");\n      } else {\n        this.setState(prevState => {\n          return {\n            contacts: [...prevState.contacts, contact]\n          };\n        });\n      }\n    };\n\n    this.handleFilter = e => {\n      this.setState({\n        filter: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const {\n        name,\n        number\n      } = this.state;\n      this.addContact({\n        id: uuidv4(),\n        name: name,\n        number: number\n      });\n      this.setState({\n        name: \"\",\n        number: \"\"\n      });\n    };\n\n    this.getFilteredData = () => {\n      return this.state.filter ? this.state.contacts.filter(item => item.name.toLowerCase().includes(this.state.filter.toLowerCase())) : this.state.contacts;\n    };\n\n    this.onDelete = id => {\n      this.setState(prevState => {\n        return {\n          contacts: prevState.contacts.filter(item => item.id !== id)\n        };\n      });\n    };\n  }\n\n  componentDidMount() {\n    const savedContacts = localStorage.getItem(\"contacts\");\n\n    if (savedContacts) {\n      this.setState({\n        contacts: JSON.parse(savedContacts)\n      });\n    }\n  }\n\n  componentDidUpdate(prevState) {\n    console.log(\"kkk\");\n    const {\n      contacts\n    } = this.state;\n\n    if (prevState.contacts !== contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n    }\n  }\n\n  render() {\n    const {\n      filter\n    } = this.state;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.block,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.form,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, \"Phonebook\"), /*#__PURE__*/React.createElement(ContactForm, {\n      addContact: this.addContact,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.contacts,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Filter, {\n      searchContact: this.getFilteredData,\n      value: filter,\n      onFilter: this.handleFilter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(ContactList, {\n      contacts: this.getFilteredData(),\n      onDelete: this.onDelete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default Phonebook;\nPhonebook.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string,\n    name: PropTypes.string,\n    number: PropTypes.string\n  })),\n  filter: PropTypes.string\n};","map":{"version":3,"sources":["/Users/kristinalobanets/Documents/GitHub/goit-react-hw-03-phonebook/src/components/phonebook/Phonebook.js"],"names":["React","Component","ContactForm","ContactList","Filter","v4","uuidv4","styles","PropTypes","Phonebook","state","contacts","filter","addContact","contact","find","item","name","alert","setState","prevState","handleFilter","e","target","value","handleSubmit","preventDefault","number","id","getFilteredData","toLowerCase","includes","onDelete","componentDidMount","savedContacts","localStorage","getItem","JSON","parse","componentDidUpdate","console","log","setItem","stringify","render","block","form","propTypes","arrayOf","shape","string"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ContactForm from \"../ContactForm/ContactForm\";\nimport ContactList from \"../ContactList/ContactList\";\nimport Filter from \"../filter/filter\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport styles from \"./phonebook.module.css\";\nimport PropTypes from \"prop-types\";\n\nclass Phonebook extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const savedContacts = localStorage.getItem(\"contacts\");\n    if (savedContacts) {\n      this.setState({\n        contacts: JSON.parse(savedContacts),\n      });\n    }\n  }\n\n  componentDidUpdate(prevState) {\n    console.log(\"kkk\");\n    const { contacts } = this.state;\n    if (prevState.contacts !== contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n    }\n  }\n\n  addContact = (contact) => {\n    if (this.state.contacts.find((item) => item.name === contact.name)) {\n      alert(\"The name is already exsist\");\n    } else {\n      this.setState((prevState) => {\n        return {\n          contacts: [...prevState.contacts, contact],\n        };\n      });\n    }\n  };\n\n  handleFilter = (e) => {\n    this.setState({ filter: e.target.value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { name, number } = this.state;\n    this.addContact({ id: uuidv4(), name: name, number: number });\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  getFilteredData = () => {\n    return this.state.filter\n      ? this.state.contacts.filter((item) =>\n          item.name.toLowerCase().includes(this.state.filter.toLowerCase())\n        )\n      : this.state.contacts;\n  };\n\n  onDelete = (id) => {\n    this.setState((prevState) => {\n      return {\n        contacts: prevState.contacts.filter((item) => item.id !== id),\n      };\n    });\n  };\n\n  render() {\n    const { filter } = this.state;\n    return (\n      <>\n        <div className={styles.block}>\n          <div className={styles.form}>\n            <h1>Phonebook</h1>\n            <ContactForm addContact={this.addContact} />\n          </div>\n          <div className={styles.contacts}>\n            <Filter\n              searchContact={this.getFilteredData}\n              value={filter}\n              onFilter={this.handleFilter}\n            />\n\n            <ContactList\n              contacts={this.getFilteredData()}\n              onDelete={this.onDelete}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n}\nexport default Phonebook;\n\nPhonebook.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    })\n  ),\n  filter: PropTypes.string,\n};\n"]},"metadata":{},"sourceType":"module"}